#!/bin/bash
# toggle state of touchpad

SAVED_LOCATION=/tmp/.mouselocation
TP_PID=$(xinput list | grep -i 'touchpad' | sed 's/.*id\=\([0-9]\+\).*/\1/g')

[[ $TP_PID = '' ]] && echo 'touchpad id not found' >&2 && exit 1

function main(){
  echo main
  [[ $1 = 'on' ]] && turn_on && return
  [[ $1 = 'off' ]] && turn_off && return

  STATUS=$(xinput list-props $TP_PID | grep Device\ Enabled | sed -e 's/.*\:[ \t]\+//g')

  [[ $STATUS = '0' ]] && turn_on && return
  [[ $STATUS = '1' ]] && turn_off && return
}

function save_location() {
  [[ -e $SAVED_LOCATION ]] && return
  xdotool getmouselocation --shell > $SAVED_LOCATION
}

function wiggle_cursor() {
  DELAY=0.01
  D=10
  for run in {1..5}; do
    xdotool mousemove_relative -- +0 +$D sleep $DELAY
    xdotool mousemove_relative -- -$D -0 sleep $DELAY
    xdotool mousemove_relative -- -0 -$D sleep $DELAY
    xdotool mousemove_relative -- +$D +0 sleep $DELAY
  done
}

function restore_location() {
  if [ -e $SAVED_LOCATION ]; then
    source $SAVED_LOCATION
    rm $SAVED_LOCATION
    xdotool mousemove $X $Y mousemove_relative 1 1
    xdotool mousemove $X $Y mousemove_relative 1 1
  fi
}

function turn_on() {
  xinput enable $TP_PID
  sleep 0.1
  xinput set-prop $TP_PID 'Synaptics Off' 0
  restore_location
  wiggle_cursor
  echo 'touchpad on'
}

function turn_off() {
  save_location
  xinput disable $TP_PID
  xdotool mousemove 10000 10000
  echo 'touchpad off'
}

main $1
