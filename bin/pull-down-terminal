#!/bin/bash
# Bind this script to a keyboard shortcut to add pull-down behaviour to
# Gnome terminal similar to guake or tilda

# It seems to work with gnome-terminal or xfce4-terminal
# I haven't tested any other terminal emulators

TERM_CLASS="DROPDOWN"
EMULATORS="gnome-terminal xfce4-terminal uxterm"

main() {
  win_id=$(get_terminal_window)
  if [[ -n $win_id ]]; then 
    if [[ $(xdotool getactivewindow) == $win_id ]]; then
      # if terminal window is active, mimize
      xdotool getactivewindow windowminimize
    else
      # if terminal window is inactive, bring in focus
      desktop=$(xdotool get_desktop)
      xdotool set_desktop_for_window $win_id $desktop
      xdotool windowactivate $win_id 
    fi
  else
    # no running terminal emulator
    # open new terminal at top of the screen
    TERMINAL_EMULATOR=$(get_emulator)
    echo $TERMINAL_EMULATOR
    $TERMINAL_EMULATOR&
    echo opened
    # set initial size to 100% x 45%
    xdotool search \
      --onlyvisible --sync --limit 1 --class "$TERMINAL_EMULATOR"\
      windowsize $(absolute_window_size 100 45) windowactivate \
      set_window --class $TERM_CLASS
  fi
}

get_emulator(){
  # echo the first available terminal emulator
  for emu in $EMULATORS; do
    which $emu &> /dev/null && echo $emu && return
  done
}

get_terminal_window() {
  # get id of open terminal window. Will wait for window to open if neccessary
  xdotool search --limit 1 --class "$TERM_CLASS"
}

absolute_window_size() {
  # convert relative window size to absolute pixel size, based on screen res
  width_percent=$1
  height_percent=$2
  IFS=x
  screen_dimensions=$(xrandr | grep connected | grep -o '[1-9]\+x[0-9]\+')
  set $screen_dimensions
  echo $(($width_percent * $1 / 100)) $(($height_percent * $2 / 100))
}

main
