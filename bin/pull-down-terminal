#!/bin/bash
# Bind this script to a keyboard shortcut to add pull-down behaviour to
# Gnome terminal similar to guake or tilda

# List of emulators to use in order of preference
EMULATORS="gnome-terminal xfce4-terminal uxterm"

# identifier to use when searching for an active dropdown
DROPDOWN_CLASS="DROPDOWNTERMINAL"

main() {
  win_id=$(get_terminal_window)
  if [[ -n $win_id ]]; then 
    if [[ $(xdotool getactivewindow) == $win_id ]]; then
      # if terminal window is active, unmap  
      xdotool getactivewindow windowunmap 
    else
      # if terminal window is inactive, map and bring in focus
      xdotool windowmap $win_id 
      xdotool set_desktop_for_window $win_id $(xdotool get_desktop)
      xdotool windowactivate $win_id
    fi
  else
    # no running terminal emulator
    TERMINAL_EMULATOR=$(get_emulator)
    # start new terminal emulator window
    $TERMINAL_EMULATOR &
    # resize and set window class for the emulator
    xdotool search \
      --onlyvisible --sync --limit 1 --class "$TERMINAL_EMULATOR"\
      windowsize $(absolute_window_size 100 45) \
      windowactivate \
      set_window --class $DROPDOWN_CLASS
  fi
}

get_emulator(){
  # get the first available terminal emulator
  for emu in $EMULATORS; do
    which $emu &> /dev/null && echo $emu && return
  done
}

get_terminal_window() {
  # get id of open terminal window. Will wait for window to open if neccessary
  xdotool search --limit 1 --class "$DROPDOWN_CLASS"
}

absolute_window_size() {
  # convert relative window size to absolute pixel size, based on screen res
  width_percent=$1
  height_percent=$2
  IFS=x
  screen_dimensions=$(xrandr | grep connected | grep -o '[1-9]\+x[0-9]\+')
  set $screen_dimensions
  echo $(($width_percent * $1 / 100)) $(($height_percent * $2 / 100))
}

main
